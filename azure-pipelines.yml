# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: 'windows-latest'

jobs:
- job: Check
  steps:
    - powershell: | 
        "$Build.SourceVersionMessage" -match [regex]::('\[\w+\][[:blank:]]\w+[[:blank:]]\(\d+.\d+.\d+\)')
  

# steps:
#   - powershell: Write-Output "$(Build.SourceVersionMessage)"
  
#   - powershell: Write-Output "$(System.TeamFoundationCollectionUri)"

#   - powershell: Write-Output "$(System.TeamProject)"

#   - powershell: |
#       $targetUrl = "$(System.TeamFoundationCollectionUri)$(System.TeamProject)/_apis"
#       Write-Output $targetUrl
# pr: none

# variables:
#   BuildUserHomeDir: /Users/runner
#   AdvancedBuildDir: $(BuildUserHomeDir)/n
#   HelloWorldFilePath: $(AdvancedBuildDir)/hello.txt
#   envName: dev
#   Version.MajorMinor: 2020
#   a: $[counter(20, 000009)]

# pool:
#   vmImage: 'macos-10.14'


# steps:
#   - script: echo $()
#   - powershell: env
#   - powershell: |
#       $buildMessage = (git log -1 --pretty=%B).Split()
      
#       Write-Output $buildMessage
#       Write-Output $buildMessage.GetType()

#       $buildType = $buildMessage[0]
#       $buildService = $buildMessage[1]
#       $buildVersion = $buildMessage[2].Trim('()')

#       Write-Output "Commit message - $buildMessage"
#       Write-Output "Build type - $buildType"
#       Write-Output "Build service - $buildService" 
#       Write-Output "Build version - $buildVersion"
  



# # - bash: |
# #     echo "$(Build.QueuedBy) - $(SetBuildVariables.buildType) - $(SetBuildVariables.buildConfiguration) - $(SetBuildVariables.fastlaneBuildCommand)" >> $(Build.Repository.LocalPath)/build.txt

# # - bash: echo $(MobileAppPackageUri)

# # - task: CopyFiles@2
# #   inputs:
# #     SourceFolder: $(Build.Repository.LocalPath)
# #     contents: 'build.txt'
# #     targetFolder: $(Build.ArtifactStagingDirectory)    
# # - task: PublishBuildArtifacts@1
# #   inputs:
# #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
# #     ArtifactName: 'build_artifact'
