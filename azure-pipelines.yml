# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
# pr: none

pool:
  vmImage: 'macos-10.14'

steps:
- script: git checkout develop

- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- script: |
    echo "Show vars"
    echo "Definition name" 
    echo $(Build.DefinitionName)
    echo "Source branch"
    echo $(Build.SourceBranch)
    echo "Source branch name"
    echo $(Build.SourceBranchName)

- task: PowerShell@2
  name: setServiceParams
  inputs:
    targetType: inline
    script: |
      $buildDefinitionName = "BrightBoxHQ.Remoto.iOS.AuthService"
      $serviceName = $buildDefinitionName.Split('.')[-1]
      echo "##vso[task.setvariable variable=serviceName;isOutput=true]$serviceName"

- task: PowerShell@2
  inputs:
    targetType: inline
    script: |
      $service = "$(setServiceParams.serviceName)"
      $version = "$(Build.SourceBranchName)"
      $commitMessage = "$service ($version)"
      Write-Host $commitMessage

- task: PowerShell@2
  displayName: before tagging
  inputs:
    targetType: inline
    script: |
      Write-Host "This task was added before tagging"

- task: PowerShell@2
  displayName: after tagging
  inputs:
    targetType: inline
    script: |
      Write-Host "This task was added after tagging" 

- task: Bash@3
  displayName: LS
  inputs:
   targetType: inline
   script: |
    java -version
    /usr/libexec/java_home -V
    
      
    
    
